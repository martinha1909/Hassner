<?php
    header('Content-Type: application/json');
    $_SESSION['dependencies'] = "BACKEND";
    include '../control/Dependencies.php';
    include '../constants/GraphOption.php';

    $conn = connect();
    // $json_data = array();
    $current_date_time = getCurrentDate("America/Edmonton");
    // $date_parser = dayAndTimeSplitter($current_date_time);
    // $current_day = $date_parser[0];
    // $current_time = $date_parser[1];
    // //Contains distinct dates that will be appearing on the graph, in ascending order
    // $graph_dates = array();
    // $current_day = date('Y-m-d');
    // $days_ago = "";

    $date = new DateTime($current_date_time);

    $current_date_time = $date->format('Y-m-d H:i:s');

    $sql = "INSERT INTO dummy (date)
                    VALUES(?)";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param('s', $current_date_time);
    $stmt->execute();
    // $sql = ""

    // if($_SESSION['graph_options'] == GraphOption::ONE_DAY || $_SESSION['graph_options'] == GraphOption::NONE)
    // {
    //     //These variables are converted to have format of YYYY-MM-DD instead of DD-MM-YYYY in order to compare with date and time
    //     //generated by sql event scheduler, which will be parsed to DD-MM-YYYY after query returns
    //     $days_ago = date('Y-m-d', strtotime('-1 day', strtotime($date_parser[0])));

    //     //No need to specify the log interval here since event scheduler in the db is scheduled to log 
    //     //every 15 minutes by default
        // $sql = "SELECT artist_username, price_per_share, time_recorded, date_recorded FROM artist_stock_change_15 WHERE artist_username = ? AND date_recorded = ? ORDER BY time_recorded";
        // $stmt = $conn->prepare($sql);
        // $stmt->bind_param('ss', $_SESSION['selected_artist'], $days_ago);
        // $stmt->execute();
        // $result = $stmt->get_result();

    //     while($row = $result->fetch_assoc())
    //     {
    //         //Don't care about the seconds
    //         $row['time_recorded'] = substr($row['time_recorded'], 0, 5);
    //         $row['date_recorded'] = dateParser(toDDMMYYYY($row['date_recorded']));
    //         array_push($json_data, $row);
    //     }

    //     $sql = "SELECT artist_username, price_per_share, time_recorded, date_recorded FROM artist_stock_change_15 WHERE artist_username = ? AND date_recorded = ? ORDER BY time_recorded";
    //     $stmt = $conn->prepare($sql);
    //     $stmt->bind_param('ss', $_SESSION['selected_artist'], $current_day);
    //     $stmt->execute();
    //     $result = $stmt->get_result();

    //     while($row = $result->fetch_assoc())
    //     {
    //         //Don't care about the seconds
    //         $row['time_recorded'] = substr($row['time_recorded'], 0, 5);
    //         $row['date_recorded'] = dateParser(toDDMMYYYY($row['date_recorded']));
    //         array_push($json_data, $row);
    //     }
    // }
    // else if($_SESSION['graph_options'] == GraphOption::FIVE_DAY)
    // {
    //     $days_ago = date('Y-m-d', strtotime('-5 days', strtotime($date_parser[0])));

    //     $result = getDatesWithinInterval5D($conn, $_SESSION['selected_artist'], $days_ago, $current_day);

    //     while($row = $result->fetch_assoc())
    //     {
    //         array_push($graph_dates, $row['date_recorded']);
    //     }

    //     for($i = 0; $i < sizeof($graph_dates); $i++)
    //     {
    //         $result = getData5D($conn, $_SESSION['selected_artist'], $graph_dates[$i]);

    //         while($row = $result->fetch_assoc())
    //         {
    //             array_push($json_data, $row);
    //         }
    //     }
    // }

    // closeCon($conn);

    // print json_encode($json_data);
?>